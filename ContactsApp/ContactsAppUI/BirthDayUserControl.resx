<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>